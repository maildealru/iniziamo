package example

// Code generated by iniziamo. DO NOT EDIT.

import (
	"fmt"
	"strconv"

	"context"

	"github.com/maildealru/iniziamo/pkg/iniziamo"

	"github.com/go-resty/resty/v2"
)

type MailruOAuth2ClientConfig struct {
	Scheme iniziamo.Scheme
	Host   string
	Port   int
}

type MailruOAuth2Client interface {
	ExchangeAuthCodeToToken(
		context.Context, *mailruOAuth2ClientExchangeAuthCodeToTokenRequest,
	) (
		*mailruOAuth2ClientExchangeAuthCodeToTokenResponse, error,
	)

	GetUserInfo(
		context.Context, *mailruOAuth2ClientGetUserInfoRequest,
	) (
		*mailruOAuth2ClientGetUserInfoResponse, error,
	)

	RenewToken(
		context.Context, *mailruOAuth2ClientRenewTokenRequest,
	) (
		*mailruOAuth2ClientRenewTokenResponse, error,
	)
}

type mailruOAuth2ClientImpl struct {
	conf MailruOAuth2ClientConfig

	baseURL string
}

func NewMailruOAuth2Client(conf MailruOAuth2ClientConfig) MailruOAuth2Client {
	return &mailruOAuth2ClientImpl{
		conf: conf,
		baseURL: fmt.Sprintf(
			"%s://%s%s%s",
			conf.Scheme, conf.Host,
			func() string {
				if conf.Port == 0 {
					return ""
				}
				return ":"
			}(),
			func() string {
				if conf.Port == 0 {
					return ""
				}
				return strconv.Itoa(conf.Port)
			}(),
		),
	}
}

type mailruOAuth2ClientExchangeAuthCodeToTokenRequest struct {
}

func MailruOAuth2ClientExchangeAuthCodeToTokenRequest() *mailruOAuth2ClientExchangeAuthCodeToTokenRequest {
	return &mailruOAuth2ClientExchangeAuthCodeToTokenRequest{
		//TODO
	}
}

type mailruOAuth2ClientExchangeAuthCodeToTokenResponse struct {
	//TODO
}

func MailruOAuth2ClientExchangeAuthCodeToTokenResponse() *mailruOAuth2ClientExchangeAuthCodeToTokenResponse {
	return &mailruOAuth2ClientExchangeAuthCodeToTokenResponse{
		//TODO
	}
}

func (c *mailruOAuth2ClientImpl) ExchangeAuthCodeToToken(
	ctx context.Context, request *mailruOAuth2ClientExchangeAuthCodeToTokenRequest,
) (
	response *mailruOAuth2ClientExchangeAuthCodeToTokenResponse, err error,
) {
	_, err = resty.
		New().R().
		SetContext(ctx).
		Execute("POST", c.baseURL+"/token")
	if err != nil {
		return nil, err
	}

	//TODO
	return nil, nil
}

type mailruOAuth2ClientGetUserInfoRequest struct {
	accessToken string
}

func MailruOAuth2ClientGetUserInfoRequest() *mailruOAuth2ClientGetUserInfoRequest {
	return &mailruOAuth2ClientGetUserInfoRequest{
		//TODO
	}
}

func (r *mailruOAuth2ClientGetUserInfoRequest) AccessToken(value string) *mailruOAuth2ClientGetUserInfoRequest {
	r.accessToken = value

	return r
}

type mailruOAuth2ClientGetUserInfoResponse struct {
	//TODO
}

func MailruOAuth2ClientGetUserInfoResponse() *mailruOAuth2ClientGetUserInfoResponse {
	return &mailruOAuth2ClientGetUserInfoResponse{
		//TODO
	}
}

func (c *mailruOAuth2ClientImpl) GetUserInfo(
	ctx context.Context, request *mailruOAuth2ClientGetUserInfoRequest,
) (
	response *mailruOAuth2ClientGetUserInfoResponse, err error,
) {
	_, err = resty.
		New().R().
		SetContext(ctx).
		Execute("GET", c.baseURL+"/userinfo")
	if err != nil {
		return nil, err
	}

	//TODO
	return nil, nil
}

type mailruOAuth2ClientRenewTokenRequest struct {
}

func MailruOAuth2ClientRenewTokenRequest() *mailruOAuth2ClientRenewTokenRequest {
	return &mailruOAuth2ClientRenewTokenRequest{
		//TODO
	}
}

type mailruOAuth2ClientRenewTokenResponse struct {
	//TODO
}

func MailruOAuth2ClientRenewTokenResponse() *mailruOAuth2ClientRenewTokenResponse {
	return &mailruOAuth2ClientRenewTokenResponse{
		//TODO
	}
}

func (c *mailruOAuth2ClientImpl) RenewToken(
	ctx context.Context, request *mailruOAuth2ClientRenewTokenRequest,
) (
	response *mailruOAuth2ClientRenewTokenResponse, err error,
) {
	_, err = resty.
		New().R().
		SetContext(ctx).
		Execute("POST", c.baseURL+"/token")
	if err != nil {
		return nil, err
	}

	//TODO
	return nil, nil
}
